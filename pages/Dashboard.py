import streamlit as st
import pandas as pd
import plotly.graph_objects as go

# Config trang -----------------------------------------
st.set_page_config(
    page_title="Dashboard Data Analysis",
    page_icon="üìä",
    layout="wide"
)

# Tieu de
col1, col2, col3 = st.columns([1,6,1])
with col1:
    st.write("")
with col2:
    st.markdown("<h1 style='text-align: center; color: #B799FF;'>DASHBOARD</h1>", unsafe_allow_html=True)
    st.markdown("---", unsafe_allow_html=True)
with col3:
    st.write("")

# Load data
df = pd.read_excel("data/du_lieu.xlsx")
ton_df = pd.read_excel("data/ton_kho/vinh/ton_kho_vinh.xlsx")
ton_dn_df = pd.read_excel("data/ton_kho/da_nang/ton_kho_da_nang.xlsx")
ton_hcm_df = pd.read_excel("data/ton_kho/ho_chi_minh/ton_kho_ho_chi_minh.xlsx")

# 1. Tong quan nganh hang
st.markdown("## 1. T·ªïng quan ng√†nh h√†ng")

st.markdown("##### T·ªïng quan tƒÉng tr∆∞·ªüng c·ªßa doanh thu v√† l·ª£i nhu·∫≠n qua t·ª´ng th√°ng:", unsafe_allow_html=True)
profit_by_month = df.groupby('Th√°ng')['L·ª£i nhu·∫≠n'].sum()
revenue_by_month = df.groupby('Th√°ng')['Doanh thu thu·∫ßn'].sum()
ov_col1, ov_col2 = st.columns([5,5])
with ov_col1:
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=profit_by_month.index, y=profit_by_month.values, mode='lines+markers', name='TƒÉng tr∆∞·ªüng l·ª£i nhu·∫≠n'))
    fig.update_layout(title='Bi·ªÉu ƒë·ªì tƒÉng tr∆∞·ªüng l·ª£i nhu·∫≠n qua t·ª´ng th√°ng',
                    xaxis_title='Th√°ng',
                    yaxis_title='L·ª£i nhu·∫≠n',
                    )
    st.plotly_chart(fig,use_container_width=True,height=800)
with ov_col2:
    fig = go.Figure()
    fig.add_trace(go.Scatter(x=revenue_by_month.index, y=revenue_by_month.values, mode='lines+markers', name='TƒÉng tr∆∞·ªüng doanh thu thu·∫ßn'))
    fig.update_layout(title='Bi·ªÉu ƒë·ªì tƒÉng tr∆∞·ªüng doanh thu thu·∫ßn qua t·ª´ng th√°ng',
                    xaxis_title='Th√°ng',
                    yaxis_title='Doanh thu',
                    )
    st.plotly_chart(fig,use_container_width=True,height=800)
st.markdown("##### T·ªïng quan tƒÉng tr∆∞·ªüng c·ªßa doanh thu v√† l·ª£i nhu·∫≠n qua t·ª´ng th√°ng c·ªßa c√°c ng√†nh h√†ng:", unsafe_allow_html=True)
profit_by_category_month = df.groupby(['category', 'Th√°ng'])['L·ª£i nhu·∫≠n'].sum().reset_index()
revenue_by_category_month = df.groupby(['category', 'Th√°ng'])['Doanh thu thu·∫ßn'].sum().reset_index()

tab1, tab2 = st.tabs(["L·ª£i nhu·∫≠n", "Doanh thu"])
with tab1:
    fig = go.Figure()
    for category in df['category'].unique():
        data = profit_by_category_month[profit_by_category_month['category'] == category]
        fig.add_trace(go.Scatter(x=data['Th√°ng'], y=data['L·ª£i nhu·∫≠n'], mode='lines+markers', name=category))
    fig.update_layout(title='Bi·ªÉu ƒë·ªì tƒÉng tr∆∞·ªüng l·ª£i nhu·∫≠n qua t·ª´ng th√°ng theo t·ª´ng ng√†nh h√†ng',
                    xaxis_title='Th√°ng',
                    yaxis_title='L·ª£i nhu·∫≠n',
                    )
    st.plotly_chart(fig,use_container_width=True,height=800)
with tab2:
    fig = go.Figure()
    for category in df['category'].unique():
        data = revenue_by_category_month[revenue_by_category_month['category'] == category]
        fig.add_trace(go.Scatter(x=data['Th√°ng'], y=data['Doanh thu thu·∫ßn'], mode='lines+markers', name=category))
    fig.update_layout(title='Bi·ªÉu ƒë·ªì tƒÉng tr∆∞·ªüng doanh thu qua t·ª´ng th√°ng theo t·ª´ng ng√†nh h√†ng',
                    xaxis_title='Th√°ng',
                    yaxis_title='Doanh thu thu·∫ßn',
                    )
    st.plotly_chart(fig,use_container_width=True,height=800)
# 2. Bo loc tung thang
st.markdown("## 2. B·ªô l·ªçc t·ª´ng th√°ng")
month_filter = st.selectbox("L·ªçc theo th√°ng:", df['Th√°ng'].unique())
df_month = df[df["Th√°ng"] == month_filter]
# T√≠nh th√°ng tr∆∞·ªõc v·ªõi nƒÉm ƒë√£ ƒë∆∞·ª£c ch·ªçn:
if month_filter == 1:
    pre_month = 1
else:
    pre_month = month_filter - 1

df_pre_month = df[df["Th√°ng"]== pre_month]

# L·∫•y c√°c ƒë·ªô ƒëo th·ªëng k√™:
df_describe = df_month.describe().round(2).T
df_describe_pre = df_pre_month.describe().round(2).T

st.markdown("##### T·ªïng quan ch·ªâ s·ªë c·ªßa c√°c th√°ng:", unsafe_allow_html=True)
tab1, tab2= st.tabs(["L·ª£i nhu·∫≠n", "Doanh thu"])
with tab1:
    stats_age_col1, stats_age_col2, stats_age_col3, stats_age_col4 = st.columns(4)
    stats_age_col1.metric(
        label="Sum",
        value=round(df_month["L·ª£i nhu·∫≠n"].sum(), 2),
        delta=round(float(df_month["L·ª£i nhu·∫≠n"].sum() - df_pre_month["L·ª£i nhu·∫≠n"].sum()), 2),
    )
    stats_age_col2.metric(
        label="Mean",
        value=df_describe.loc["L·ª£i nhu·∫≠n"].loc["mean"],
        delta=round(df_describe.loc["L·ª£i nhu·∫≠n"].loc["mean"] - df_describe_pre.loc["L·ª£i nhu·∫≠n"].loc["mean"], 2),
    )
    stats_age_col3.metric(
        label="Median",
        value=df_describe.loc["L·ª£i nhu·∫≠n"].loc["50%"],
        delta=round(df_describe.loc["L·ª£i nhu·∫≠n"].loc["50%"] - df_describe_pre.loc["L·ª£i nhu·∫≠n"].loc["50%"], 2),
    )
    stats_age_col4.metric(
        label="25%",
        value=df_describe.loc["L·ª£i nhu·∫≠n"].loc["25%"],
        delta=round(df_describe.loc["L·ª£i nhu·∫≠n"].loc["25%"] - df_describe_pre.loc["L·ª£i nhu·∫≠n"].loc["25%"], 2),
    )

    stats_age_col5, stats_age_col6, stats_age_col7 = st.columns(3)
    stats_age_col5.metric(
        label="75%",
        value=df_describe.loc["L·ª£i nhu·∫≠n"].loc["max"],
        delta=round(df_describe.loc["L·ª£i nhu·∫≠n"].loc["max"] - df_describe_pre.loc["L·ª£i nhu·∫≠n"].loc["max"], 2),
    )
    stats_age_col6.metric(
        label="Min",
        value=df_describe.loc["L·ª£i nhu·∫≠n"].loc["min"],
        delta=round(df_describe.loc["L·ª£i nhu·∫≠n"].loc["min"] - df_describe_pre.loc["L·ª£i nhu·∫≠n"].loc["min"], 2),
    )
    stats_age_col7.metric(
        label="Max",
        value=df_describe.loc["L·ª£i nhu·∫≠n"].loc["max"],
        delta=round(df_describe.loc["L·ª£i nhu·∫≠n"].loc["max"] - df_describe_pre.loc["L·ª£i nhu·∫≠n"].loc["max"], 2),
    )
with tab2:
    stats_age_col1, stats_age_col2, stats_age_col3, stats_age_col4 = st.columns(4)
    stats_age_col1.metric(
        label="Sum",
        value=round(df_month["Doanh thu thu·∫ßn"].sum(), 2),
        delta=round(float(df_month["Doanh thu thu·∫ßn"].sum() - df_pre_month["Doanh thu thu·∫ßn"].sum()), 2),
    )
    stats_age_col2.metric(
        label="Mean",
        value=df_describe.loc["Doanh thu thu·∫ßn"].loc["mean"],
        delta=round(df_describe.loc["Doanh thu thu·∫ßn"].loc["mean"] - df_describe_pre.loc["Doanh thu thu·∫ßn"].loc["mean"], 2),
    )
    stats_age_col3.metric(
        label="Median",
        value=df_describe.loc["Doanh thu thu·∫ßn"].loc["50%"],
        delta=round(df_describe.loc["Doanh thu thu·∫ßn"].loc["50%"] - df_describe_pre.loc["Doanh thu thu·∫ßn"].loc["50%"], 2),
    )
    stats_age_col4.metric(
        label="25%",
        value=df_describe.loc["Doanh thu thu·∫ßn"].loc["25%"],
        delta=round(df_describe.loc["Doanh thu thu·∫ßn"].loc["25%"] - df_describe_pre.loc["Doanh thu thu·∫ßn"].loc["25%"], 2),
    )

    stats_age_col5, stats_age_col6, stats_age_col7 = st.columns(3)
    stats_age_col5.metric(
        label="75%",
        value=df_describe.loc["Doanh thu thu·∫ßn"].loc["max"],
        delta=round(df_describe.loc["Doanh thu thu·∫ßn"].loc["max"] - df_describe_pre.loc["Doanh thu thu·∫ßn"].loc["max"], 2),
    )
    stats_age_col6.metric(
        label="Min",
        value=df_describe.loc["Doanh thu thu·∫ßn"].loc["min"],
        delta=round(df_describe.loc["Doanh thu thu·∫ßn"].loc["min"] - df_describe_pre.loc["Doanh thu thu·∫ßn"].loc["min"], 2),
    )
    stats_age_col7.metric(
        label="Max",
        value=df_describe.loc["Doanh thu thu·∫ßn"].loc["max"],
        delta=round(df_describe.loc["Doanh thu thu·∫ßn"].loc["max"] - df_describe_pre.loc["Doanh thu thu·∫ßn"].loc["max"], 2),
    )

# 3. Hang ton kho
st.markdown("## 3. H√†ng t·ªìn kho")
di_tab1, di_tab2, di_tab3 = st.tabs(["KHO T·ªîNG VINH", "KHO T·ªîNG ƒê√Ä N·∫¥NG", "KHO T·ªîNG H·ªí CH√ç MINH"])
with di_tab1:
    ton_tab1, ton_tab2 = st.tabs(["Ch·ªâ s·ªë h√†ng t·ªìn ƒë·∫ßu k√¨", "Ch·ªâ s·ªë h√†ng t·ªìn cu·ªëi k√¨"])
    ton_dau_ki_by_category_month = ton_df.groupby(['category', 'Th√°ng'])['T·ªìn ƒë·∫ßu k√¨'].sum().reset_index()
    ton_cuoi_ki_by_category_month = ton_df.groupby(['category', 'Th√°ng'])['T·ªìn cu·ªëi k√¨'].sum().reset_index()
    with ton_tab1:
        fig = go.Figure()
        for category in df['category'].unique():
            data = ton_dau_ki_by_category_month[ton_dau_ki_by_category_month['category'] == category]
            fig.add_trace(go.Scatter(x=data['Th√°ng'], y=data['T·ªìn ƒë·∫ßu k√¨'], mode='lines+markers', name=category))
        fig.update_layout(title='Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng h√†ng t·ªìn ƒë·∫ßu k√¨ qua t·ª´ng th√°ng theo category',
                        xaxis_title='Th√°ng',
                        yaxis_title='T·ªìn ƒë·∫ßu k√¨',
                        )
        st.plotly_chart(fig,use_container_width=True,height=800)
    with ton_tab2:
        fig = go.Figure()
        for category in df['category'].unique():
            data = ton_cuoi_ki_by_category_month[ton_cuoi_ki_by_category_month['category'] == category]
            fig.add_trace(go.Scatter(x=data['Th√°ng'], y=data['T·ªìn cu·ªëi k√¨'], mode='lines+markers', name=category))
        fig.update_layout(title='Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng h√†ng t·ªìn cu·ªëi k√¨ qua t·ª´ng th√°ng theo category',
                        xaxis_title='Th√°ng',
                        yaxis_title='T·ªìn cu·ªëi k√¨',
                        )
        st.plotly_chart(fig,use_container_width=True,height=800)
with di_tab2:
    ton_tab1, ton_tab2 = st.tabs(["Ch·ªâ s·ªë h√†ng t·ªìn ƒë·∫ßu k√¨", "Ch·ªâ s·ªë h√†ng t·ªìn cu·ªëi k√¨"])
    ton_dau_ki_by_category_month = ton_dn_df.groupby(['category', 'Th√°ng'])['T·ªìn ƒë·∫ßu k√¨'].sum().reset_index()
    ton_cuoi_ki_by_category_month = ton_dn_df.groupby(['category', 'Th√°ng'])['T·ªìn cu·ªëi k√¨'].sum().reset_index()
    with ton_tab1:
        fig = go.Figure()
        for category in df['category'].unique():
            data = ton_dau_ki_by_category_month[ton_dau_ki_by_category_month['category'] == category]
            fig.add_trace(go.Scatter(x=data['Th√°ng'], y=data['T·ªìn ƒë·∫ßu k√¨'], mode='lines+markers', name=category))
        fig.update_layout(title='Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng h√†ng t·ªìn ƒë·∫ßu k√¨ qua t·ª´ng th√°ng theo category',
                        xaxis_title='Th√°ng',
                        yaxis_title='T·ªìn ƒë·∫ßu k√¨',
                        )
        st.plotly_chart(fig,use_container_width=True,height=800)
    with ton_tab2:
        fig = go.Figure()
        for category in df['category'].unique():
            data = ton_cuoi_ki_by_category_month[ton_cuoi_ki_by_category_month['category'] == category]
            fig.add_trace(go.Scatter(x=data['Th√°ng'], y=data['T·ªìn cu·ªëi k√¨'], mode='lines+markers', name=category))
        fig.update_layout(title='Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng h√†ng t·ªìn cu·ªëi k√¨ qua t·ª´ng th√°ng theo category',
                        xaxis_title='Th√°ng',
                        yaxis_title='T·ªìn cu·ªëi k√¨',
                        )
        st.plotly_chart(fig,use_container_width=True,height=800)
with di_tab3:
    ton_tab1, ton_tab2 = st.tabs(["Ch·ªâ s·ªë h√†ng t·ªìn ƒë·∫ßu k√¨", "Ch·ªâ s·ªë h√†ng t·ªìn cu·ªëi k√¨"])
    ton_dau_ki_by_category_month = ton_hcm_df.groupby(['category', 'Th√°ng'])['T·ªìn ƒë·∫ßu k√¨'].sum().reset_index()
    ton_cuoi_ki_by_category_month = ton_hcm_df.groupby(['category', 'Th√°ng'])['T·ªìn cu·ªëi k√¨'].sum().reset_index()
    with ton_tab1:
        fig = go.Figure()
        for category in df['category'].unique():
            data = ton_dau_ki_by_category_month[ton_dau_ki_by_category_month['category'] == category]
            fig.add_trace(go.Scatter(x=data['Th√°ng'], y=data['T·ªìn ƒë·∫ßu k√¨'], mode='lines+markers', name=category))
        fig.update_layout(title='Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng h√†ng t·ªìn ƒë·∫ßu k√¨ qua t·ª´ng th√°ng theo category',
                        xaxis_title='Th√°ng',
                        yaxis_title='T·ªìn ƒë·∫ßu k√¨',
                        )
        st.plotly_chart(fig,use_container_width=True,height=800)
    with ton_tab2:
        fig = go.Figure()
        for category in df['category'].unique():
            data = ton_cuoi_ki_by_category_month[ton_cuoi_ki_by_category_month['category'] == category]
            fig.add_trace(go.Scatter(x=data['Th√°ng'], y=data['T·ªìn cu·ªëi k√¨'], mode='lines+markers', name=category))
        fig.update_layout(title='Bi·ªÉu ƒë·ªì s·ªë l∆∞·ª£ng h√†ng t·ªìn cu·ªëi k√¨ qua t·ª´ng th√°ng theo category',
                        xaxis_title='Th√°ng',
                        yaxis_title='T·ªìn cu·ªëi k√¨',
                        )
        st.plotly_chart(fig,use_container_width=True,height=800)