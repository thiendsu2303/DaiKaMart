import streamlit as st
import pandas as pd
import plotly.graph_objects as go
import plotly.express as px


def Title():
    # Tieu de
    col1, col2, col3 = st.columns([1,6,1])
    with col1:
        st.write("")
    with col2:
        st.markdown("<h1 style='text-align: center; color: #B799FF;'>MANAGER</h1>", unsafe_allow_html=True)
        st.markdown("---", unsafe_allow_html=True)
    with col3:
        st.write("")
def docFile(path,sheet_name):
    df = pd.read_excel(path,sheet_name=sheet_name)
    return df
def veBieuDoHeThongKinhDoanh():
    df = pd.read_excel("data/config/Config.xlsx",sheet_name="M·ª•c ti√™u C√¥ng ty ",usecols="B:F", skiprows=14, nrows=8)
    df = df.drop(0)
    df = df.fillna(0)
    sum_col1, sum_col2, sum_col3, sum_col4 = st.columns(4)
    sum_col1.metric(
        label = "T·ªïng doanh thu d·ª± ki·∫øn",
        value = df["Doanh thu"].sum()
    )
    sum_col2.metric(
        label = "T·ªïng l·ª£i nhu·∫≠n g·ªôp d·ª± ki·∫øn",
        value = df["L·ª£i nhu·∫≠n g·ªôp"].sum()
    )
    sum_col3.metric(
        label = "T·ªïng chi ph√≠ d·ª± ki·∫øn",
        value = df["Chi ph√≠"].sum()
    )
    sum_col4.metric(
        label = "T·ªïng l·ª£i nhu·∫≠n r√≤ng d·ª± ki·∫øn",
        value = df["L·ª£i nhu·∫≠n R√≤ng"].sum()
    )
    in_real_col1, in_real_col2, in_real_col3, in_real_col4 = st.columns(4)
    with in_real_col1:
        real_revenue = st.number_input('Nh·∫≠p doanh thu th·ª±c:')
    with in_real_col2:
        real_profit = st.number_input('Nh·∫≠p l·ª£i nhu·∫≠n g·ªôp th·ª±c:')
    with in_real_col3:
        real_cost = st.number_input('Nh·∫≠p chi ph√≠ th·ª±c:')
    with in_real_col4:
        real_p_profit = st.number_input('Nh·∫≠p l·ª£i nhu·∫≠n r√≤ng th·ª±c:')
    sum_col1, sum_col2, sum_col3, sum_col4 = st.columns(4)
    sum_col1.metric(
        label = "ƒê·∫°t ƒë∆∞·ª£c ph·∫ßn trƒÉm theo d·ª± ki·∫øn",
        value = (real_revenue/df["Doanh thu"].sum())*100
    )
    sum_col2.metric(
        label = "ƒê·∫°t ƒë∆∞·ª£c ph·∫ßn trƒÉm theo d·ª± ki·∫øn",
        value = (real_profit/df["L·ª£i nhu·∫≠n g·ªôp"].sum())*100
    )
    sum_col3.metric(
        label = "Chi·∫øm ph·∫ßn trƒÉm so v·ªõi d·ª± ki·∫øn",
        value = (real_cost/df["Chi ph√≠"].sum())*100
    )
    sum_col4.metric(
        label = "ƒê·∫°t ƒë∆∞·ª£c ph·∫ßn trƒÉm theo d·ª± ki·∫øn",
        value = (real_p_profit/df["L·ª£i nhu·∫≠n R√≤ng"].sum())*100
    )
    col1, col2, col3 = st.columns(3)
    with col1: 
        fig = go.Figure(data=go.Pie(labels=df['Khu v·ª±c & ƒê·ªãa ƒëi·ªÉm Kinh doanh'], values=df['Doanh thu'],
                            hovertemplate='Khu v·ª±c: %{label}<br>Doanh thu: %{value}<br>T·ª∑ l·ªá: %{percent}<extra></extra>'))
        fig.update_traces(textinfo='value+percent')
        fig.update_layout(title='Bi·ªÉu ƒë·ªì doanh thu v√† t·ª∑ l·ªá ph·∫ßn trƒÉm theo khu v·ª±c')
        st.plotly_chart(fig,use_container_width=True,height=800)
    with col2:
        fig = go.Figure(data=go.Pie(labels=df['Khu v·ª±c & ƒê·ªãa ƒëi·ªÉm Kinh doanh'], values=df['L·ª£i nhu·∫≠n g·ªôp'],
                           hovertemplate='Khu v·ª±c: %{label}<br>L·ª£i nhu·∫≠n g·ªôp: %{value}<br>T·ª∑ l·ªá: %{percent}<extra></extra>'))
        fig.update_traces(textinfo='value+percent')
        fig.update_layout(title='Bi·ªÉu ƒë·ªì l·ª£i nhu·∫≠n g·ªôp v√† t·ª∑ l·ªá ph·∫ßn trƒÉm theo khu v·ª±c')
        st.plotly_chart(fig,use_container_width=True,height=800)
    with col3:
        fig = go.Figure(data=go.Pie(labels=df['Khu v·ª±c & ƒê·ªãa ƒëi·ªÉm Kinh doanh'], values=df['Chi ph√≠'],
                           hovertemplate='Khu v·ª±c: %{label}<br>Chi ph√≠: %{value}<br>T·ª∑ l·ªá: %{percent}<extra></extra>'))
        fig.update_traces(textinfo='value+percent')
        fig.update_layout(title='Bi·ªÉu ƒë·ªì chi ph√≠ v√† t·ª∑ l·ªá ph·∫ßn trƒÉm theo khu v·ª±c')
        st.plotly_chart(fig,use_container_width=True,height=800)
    
def phanBoChiPhi():
    df_chi_phi = df = pd.read_excel("data/config/Config.xlsx",sheet_name="M·ª•c ti√™u C√¥ng ty ",usecols="A:G", skiprows=29, nrows=11)
    df_chi_phi = df_chi_phi.fillna(0)
    df_chi_phi['T·ª∑ l·ªá'] = df_chi_phi['T·ª∑ l·ªá'].apply(lambda x: round(x, 4))
    fig = px.pie(df, values='T·ª∑ l·ªá', names='Danh s√°ch chi ph√≠', title='Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán t·ª∑ tr·ªçng c·ªßa c√°c lo·∫°i chi ph√≠', hole = 0.2)
    st.plotly_chart(fig,use_container_width=True,height=800)
def phanBoThuongNhanSu():
    df_nhan_su = pd.read_excel("data/config/Config.xlsx",sheet_name="M·ª•c ti√™u C√¥ng ty ",usecols="B:I", skiprows=44, nrows=10)
    df_nhan_su = df_nhan_su.fillna(0)
    sum_col1, sum_col2, sum_col3, sum_col4, sum_col5, sum_col6 = st.columns(6)
    sum_col1.metric(
        label = "T·ªïng qu·ªπ",
        value = df_nhan_su["Qu·ªπ"].iloc[:7].sum()
    )
    sum_col2.metric(
        label = "T·ªïng nh√¢n vi√™n",
        value = df_nhan_su["Nh√¢n vi√™n "].iloc[:7].sum()
    )
    sum_col3.metric(
        label = "T·ªïng qu·∫£n l√Ω c∆° s·ªü",
        value = df_nhan_su["Qu·∫£n l√Ω c∆° s·ªü"].iloc[:7].sum()
    )
    sum_col4.metric(
        label = "T·ªïng qu·∫£n l√Ω trung",
        value = df_nhan_su["Qu·∫£n l√Ω Trung "].iloc[:7].sum()
    )
    sum_col5.metric(
        label = "T·ªïng qu·∫£n l√Ω c·∫•p cao",
        value = df_nhan_su["Qu·∫£n l√Ω c·∫•p cao"].iloc[:7].sum()
    )
    sum_col6.metric(
        label = "T·ªïng nh√¢n s·ª±",
        value = df_nhan_su["Nh√¢n vi√™n "].iloc[:7].sum()+df_nhan_su["Qu·∫£n l√Ω c∆° s·ªü"].iloc[:7].sum()+df_nhan_su["Qu·∫£n l√Ω Trung "].iloc[:7].sum()+df_nhan_su["Qu·∫£n l√Ω c·∫•p cao"].iloc[:7].sum()
    )
    col1, col2 = st.columns([3,7])
    with col1:
        db_df_nhan_su = df_nhan_su.iloc[:7]
        fig = px.pie(db_df_nhan_su, values='T·ª∑ l·ªá', names='B·ªô ph·∫≠n ', title='Bi·ªÉu ƒë·ªì th·ªÉ hi·ªán t·ª∑ tr·ªçng c·ªßa c√°c lo·∫°i chi ph√≠')
        st.plotly_chart(fig,use_container_width=True,height=800)
    with col2:
        st.dataframe(df_nhan_su)

def main():
    # Config trang -----------------------------------------
    st.set_page_config(
        page_title="Manager",
        page_icon="üìä",
        layout="wide"
    )
    Title()
    st.markdown("### H·ªá th·ªëng kinh doanh")
    veBieuDoHeThongKinhDoanh()
    st.markdown("### Ph√¢n b·ªï chi ph√≠")
    phanBoChiPhi()
    st.markdown("### Ph√¢n b·ªï th∆∞·ªüng nh√¢n s·ª±")
    phanBoThuongNhanSu()

if __name__ == '__main__':
    main()